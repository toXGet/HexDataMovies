@page "/actors/create"
@using HexDataMovies.Client.Pages.Components
@inject IServiceMovie repositorio
@inject NavigationManager navigationManager
@* Línea 6 añadida de la semana VII - parte 1 *@
@inject IErrorMessage mostrarMensajes

<div class="jumbotron">
    <FormActorComponent OnValidSubmit="Create" Actor="Actor"></FormActorComponent>
</div>

@code{
    private Actor Actor = new Actor();
    @* Semana VII - Se comentó lo siguiente y descomentó el httpResponse, montado en la misma función
    Create() pero privada*@
    @* async Task Create()
    {
        Console.WriteLine(Actor.Name);
        Console.WriteLine(Actor.BirthDate);
        Console.WriteLine(Actor.KnownCredits);
        Console.WriteLine(Actor.Nominations);
        Console.WriteLine(Actor.Biography);
        Console.WriteLine(Actor.Gender);
        Console.WriteLine(Actor.DocumentType);
        Console.WriteLine(Actor.Document);
        Console.WriteLine(Actor.Photo);
    } *@
    private async Task Create()
    {
        var httpResponse = await repositorio.Post("api/actors", Actor);
        if (httpResponse.Error)
        {
            await mostrarMensajes.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("/actors");
        }
    }
}