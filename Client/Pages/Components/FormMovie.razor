@using HexDataMovies.Client.Pages.Components
@using HexDataMovies.Client.Model

<EditForm Model="Movie" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="container">
        <div class="jumbotron">
            <div class="form-group">
                <div class="row">
                    <div class="col col-sm-9">
                        @* Título de la Película*@
                        <InputText class="form-control" @bind-Value="@Movie.Title" placeholder="Título de la Película"></InputText>
                        <ValidationMessage For="@(()=>Movie.Title)"></ValidationMessage>
                    </div>
                    <div class="col col-sm-3">
                        @* Checkbox para definir si está o no en cartelera *@
                        <InputCheckbox id="en_cartelera" class="form-check-input" @bind-Value="@Movie.EnCartelera"></InputCheckbox>
                        <label for="en_cartelera" class="form-check-label">Está en Cartelera?</label>
                        <ValidationMessage For="@(()=>Movie.EnCartelera)"></ValidationMessage>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        @* Trailer de la película *@
                        <InputText class="form-control" @bind-Value="@Movie.Trailer" placeholder="Trailer de la Película"></InputText>
                        <ValidationMessage For="@(()=>Movie.Trailer)"></ValidationMessage>
                    </div>
                    <div class="col">
                        <div class="form-group">
                            @* Fecha de lanzamiento (Premier) *@
                            <InputDate class="form-control" @bind-Value="@Movie.Premier"></InputDate>
                            <ValidationMessage For="@(()=>Movie.Premier)"></ValidationMessage>
                        </div>
                    </div>
                </div>
            </div>
            @* Sinopsis de la Película*@
            <div class="form-group">
                <InputTextArea class="form-control" @bind-Value="@Movie.Sinopsis" placeholder="Sinópsis"></InputTextArea>
                <ValidationMessage For="@(()=>Movie.Sinopsis)"></ValidationMessage>
            </div>
            @* Selección de Categorías *@
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        <label>Seleccione las Categorías</label>
                        <div>
                            <MultipleSelector Selected="Selected" NotSelected="NotSelected"></MultipleSelector>
                        </div>
                    </div>
                    <div class="col">
                        @* Poster de la Película *@
                        <div class="form-group">
                            <ImageComponent Label="" ImageSelected="ImageSelected" ImageURL=""></ImageComponent>
                        </div>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-success">Aceptar</button>
            <button type="submit" class="btn btn-danger">Cancelar</button>
        </div>
    </div>
</EditForm>
@code{
    [Parameter] public Movie Movie {get; set;}

    [Parameter] public EventCallback OnValidSubmit {get; set;}

    [Parameter] public List<FilmGenre> SelectedFilmGenres {get;set;} = new List<FilmGenre>();
    [Parameter] public List<FilmGenre> NotSelectedFilmGenres {get;set;} = new List<FilmGenre>(); 
    
    private List<MultipleSelectorModel> Selected {get;set;} = new List<MultipleSelectorModel>();
    private List<MultipleSelectorModel> NotSelected {get;set;} = new List<MultipleSelectorModel>();    
    
    private string posterTemporal;

    private void ImageSelected(string imageB64)
    {
        Movie.Poster = imageB64;
    }

    protected override void OnInitialized()
    {
        Selected = SelectedFilmGenres.Select(x => new MultipleSelectorModel(x.Id.ToString(), x.Name)).ToList();
        NotSelected = NotSelectedFilmGenres.Select(x => new MultipleSelectorModel(x.Id.ToString(), x.Name)).ToList();
        if (!string.IsNullOrWhiteSpace(Movie.Poster))
        {
            posterTemporal = Movie.Poster;
            Movie.Poster = null;
        }
    }
}