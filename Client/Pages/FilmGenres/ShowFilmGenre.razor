@page "/filmgenres"
@using HexDataMovies.Client.Pages.Components
@inject IServiceMovie movie
@inject IErrorMessage showMessage

<div class="jumbotron">
    <div class="form-group mb-3">
        <a href="filmgenres/create" class="btn btn-info btn-sm">Agregar Categoría</a>
        @* <a href="filmgenres/edit/{Id:int}" class="btn btn-alert">Editar</a> *@
    </div>
    <h6>Listado de Categorías</h6>
    <GenericList ListResults="FilmGenres">
        <ItemsComplete>
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th scope="col">Nombre</th>
                        <th scope="col">Opciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in FilmGenres)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>
                                <a href="/filmgenres/edit/@item.Id" class="btn btn-info btn-sm">Editar</a>
                                <button @onclick="@(()=>DeleteFilmGenre(item))" class="btn btn-danger btn-sm">Eliminar</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </ItemsComplete>
    </GenericList>
</div>

@code{
    public List<FilmGenre> FilmGenres { get; set; }
    protected async override Task OnInitializedAsync()
    {
         await Load();
    }
    private async Task Load()
    {
        var responseHttp = await movie.Get<List<FilmGenre>>("api/filmgenres");
        FilmGenres = responseHttp.Response;
    }
 
    private async Task DeleteFilmGenre(FilmGenre filmGenre)
    {
        var responseHttp = await movie.Delete($"api/filmgenres/{filmGenre.Id}");
        if (responseHttp.Error)
        {
            await showMessage.ShowErrorMessage(await responseHttp.GetBody());
        }else{
            await Load();
        }
    }
}